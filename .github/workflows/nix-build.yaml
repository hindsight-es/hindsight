name: Nix Package Build

# This workflow pre-builds all Hindsight packages via Nix and pushes them to Cachix.
# This provides maximum caching benefit for subsequent test.yaml and deploy-site.yaml runs.
# All packages are built on both Linux and macOS for platform coverage.

on:
  push:
    branches:
      - main
      - fix-nix-and-ci
  pull_request:
    branches:
      - main

  # Allow manual triggering
  workflow_dispatch:

jobs:
  nix-build:
    name: Build ${{ matrix.package }} on ${{ matrix.os }}
    strategy:
      # Build all packages on both platforms
      matrix:
        os: [ubuntu-latest, macos-latest]
        package:
          - hindsight-core
          - hindsight-memory-store
          - hindsight-filesystem-store
          - hindsight-postgresql-store
          - hindsight-postgresql-projections
          - hindsight-tutorials
      # Don't cancel other matrix jobs if one fails
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Setup Cachix
        uses: cachix/cachix-action@v15
        with:
          name: hindsight-es
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build ${{ matrix.package }} with Nix
        run: |
          set -e
          echo "ðŸ”¨ Building ${{ matrix.package }} on ${{ matrix.os }}..."
          nix build .#${{ matrix.package }}
          echo "âœ“ Build completed successfully"
          echo "Package built: $(readlink -f result)"

      - name: Show package info
        run: |
          if [ -e result ]; then
            echo "ðŸ“¦ Package contents:"
            ls -lh result/ | head -20 || true
          fi